(println "hello world")
(use 'overtone.live)
(doc demo)
(doc sin-osc)
(demo (sin-osc))
(envelope [0 0.5 1] [1 1] :step)
(let [env (envelope [0 0.5 1] [1 1] :step)] (demo (sin-osc :freq (+ 200 (* 200 (env-gen env :action FREE))))))
(let [env (envelope [0 0.5 1] [1 1] :lin)] (demo (sin-osc :freq (+ 200 (* 200 (env-gen env :action FREE))))))
(let [env (envelope [0 0.5 1 10 100] [1 1] :lin)] (demo (sin-osc :freq (+ 200 (* 200 (env-gen env :action FREE))))))
(let [env (envelope [0 0.5 1 1.5 2 2.5] [1 1] :lin)] (demo (sin-osc :freq (+ 200 (* 200 (env-gen env :action FREE))))))
(let [env (envelope [0 0.5 1 1.5 2 2.5] [1 1 1 1 1] :lin)] (demo (sin-osc :freq (+ 200 (* 200 (env-gen env :action FREE))))))
(let [env (envelope [0 1] [2] :sqr)]
  (demo (sin-osc :freq (+ 200 (* 200 (env-gen env :action FREE))))))
(beep)
(doc note)
(sampled-piano :note (note "C4))
(sampled-piano :note (note "C4) :sustain 0.2)
(piano (note "C4"))
(piano (note :C4))
(use 'overtone.inst)
(use 'overtone.inst.drum)
(use 'overtone.inst.piano)
(kick)
(use 'overtone.inst.bass)
(use 'overtone.inst.sampled-piano)
(use 'overtone.live)
(piano (note :C)
)
(piano note :C)
(use 'overtone.inst.piano)
(piano note :C)
(piano note "C")
(doc piano)
(piano :note (note "C4))
)
(use 'overtone.inst.drum)
(kick)
(doc kick)
(doc note)
(piano (note "C4"))
(piano (note "C4") 0.2))
(piano (note "C4") 0.2)
(piano (note "C4") :sustain 0.2)
(piano (note "C4") :sustain (0.2))
(piano (note "C4") :sustain 0.2)
(piano (note "C5") :sustain 0.2)
(piano (note "C10") :sustain 0.2)
(piano (note "8"))
(piano (note "C8"))
(piano (note "C0"))
(piano (note "C2"))
(piano (note "C3"))
(doc sampled-piano)
(piano (note "C3"))
(doc sampled-piano)
(sampled-piano (note "C3"))
(doc sustain)
(sampled-piano (note "C3") sustain)
(sampled-piano (note "C3") :sustain 3)
(sampled-piano (note "C3") :sustain 1000)
(sampled-piano (note "C3") :sustain 0)
(sampled-piano (note "C3") :sustain 1)
(sampled-piano (note "C3") :sustain 0.2)
(sampled-piano (note "C3") :sustain 0.1)
(sampled-piano (note "C3") :sustain -0.1)
(sampled-piano (note "C3") :sustain -10)
(sampled-piano (note "C3") :sustain 0)
(sampled-piano (note "C3") :sustain 1)
(sampled-piano (note "E3") :sustain 1)
(sampled-piano (note "C3") :sustain 1)
(sampled-piano (note "E3") :sustain 1)
(sampled-piano (note "C3") :sustain 1)
(sampled-piano (note "C3") :sustain 1)(sampled-piano (note "C3") :sustain 1)
(sampled-piano (note "C3") :sustain 1) (sampled-piano (note "E3") :sustain 1)
(doc class)
(class false)
(class nil)
(sampled-piano (note 200) :sustain 1) (sampled-piano (note "E3") :sustain 1)
(sampled-piano (note 200) :sustain 3) (sampled-piano (note "E3") :sustain 1)
(sampled-piano (note 200) :sustain 1)
(sampled-piano (note 400) :sustain 1)
(sampled-piano (note 600) :sustain 1)
(doc note)
(sampled-piano (note 60) :sustain 1)
(sampled-piano (note 40) :sustain 1)
(sampled-piano (note 10) :sustain 1)
(sampled-piano (note 100) :sustain 1)
(sampled-piano (note 70) :sustain 1)
(sampled-piano (note 68) :sustain 1)
(sampled-piano (note 69) :sustain 1)
(sampled-piano (note 60) :sustain 1)
(sampled-piano (note 72) :sustain 1)
(sampled-piano (note 84) :sustain 1)
(doc piano)
(doc after-delay)
(after-delay (100) (sampled-piano (note 84) :sustain 1))
(after-delay (sampled-piano (note 84) :sustain 1) (100))
(after-delay (sampled-piano (note 84) :sustain 1) (1000))
(doc keyword)
(def players [ {:name {:first "Lebron" :last "James"} :team "Lakers"} {:name {:first "Shai" :last "Gilgeous-Alexander} :team "Thunder"}])
(class players)
(def players [
  {:name {:first "Jose" :last "Peraza"}
   :stats {:stolen-bases 35 :home-runs 6}
   :position :ss}
  {:name {:first "Mike" :last "Trout"}
   :stats {:stolen-bases 15 :home-runs 36}
   :position :of}
  {:name {:first "Manny" :last "Machado"}
   :stats {:stolen-bases 20 :home-runs 30}
   :position :ss}])
(players)
(println players)
(doc get)
(get players 2
)
defaults write com.microsoft.VSCode.helper CGFontRenderingFontSmoothingDisabled -bool NO
